
Mini_Project_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000332  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00000332  000003a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__vector_2>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e3       	ldi	r30, 0x32	; 50
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ae 36       	cpi	r26, 0x6E	; 110
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 06 01 	call	0x20c	; 0x20c <main>
  7a:	0c 94 97 01 	jmp	0x32e	; 0x32e <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <ADC_init>:
  82:	17 b8       	out	0x07, r1	; 7
  84:	83 e8       	ldi	r24, 0x83	; 131
  86:	86 b9       	out	0x06, r24	; 6
  88:	08 95       	ret

0000008a <ADC_readChannel>:
  8a:	97 b1       	in	r25, 0x07	; 7
  8c:	90 7e       	andi	r25, 0xE0	; 224
  8e:	97 b9       	out	0x07, r25	; 7
  90:	97 b1       	in	r25, 0x07	; 7
  92:	87 70       	andi	r24, 0x07	; 7
  94:	89 2b       	or	r24, r25
  96:	87 b9       	out	0x07, r24	; 7
  98:	36 9a       	sbi	0x06, 6	; 6
  9a:	34 9b       	sbis	0x06, 4	; 6
  9c:	fe cf       	rjmp	.-4      	; 0x9a <ADC_readChannel+0x10>
  9e:	34 9a       	sbi	0x06, 4	; 6
  a0:	24 b1       	in	r18, 0x04	; 4
  a2:	35 b1       	in	r19, 0x05	; 5
  a4:	c9 01       	movw	r24, r18
  a6:	08 95       	ret

000000a8 <LCD_sendCommand>:
  a8:	94 98       	cbi	0x12, 4	; 18
  aa:	95 98       	cbi	0x12, 5	; 18
  ac:	2a ef       	ldi	r18, 0xFA	; 250
  ae:	30 e0       	ldi	r19, 0x00	; 0
  b0:	f9 01       	movw	r30, r18
  b2:	31 97       	sbiw	r30, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <LCD_sendCommand+0xa>
  b6:	96 9a       	sbi	0x12, 6	; 18
  b8:	f9 01       	movw	r30, r18
  ba:	31 97       	sbiw	r30, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <LCD_sendCommand+0x12>
  be:	85 bb       	out	0x15, r24	; 21
  c0:	c9 01       	movw	r24, r18
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <LCD_sendCommand+0x1a>
  c6:	96 98       	cbi	0x12, 6	; 18
  c8:	c9 01       	movw	r24, r18
  ca:	01 97       	sbiw	r24, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <LCD_sendCommand+0x22>
  ce:	08 95       	ret

000000d0 <LCD_init>:
  d0:	8f ef       	ldi	r24, 0xFF	; 255
  d2:	84 bb       	out	0x14, r24	; 20
  d4:	81 b3       	in	r24, 0x11	; 17
  d6:	80 67       	ori	r24, 0x70	; 112
  d8:	81 bb       	out	0x11, r24	; 17
  da:	88 e3       	ldi	r24, 0x38	; 56
  dc:	0e 94 54 00 	call	0xa8	; 0xa8 <LCD_sendCommand>
  e0:	8c e0       	ldi	r24, 0x0C	; 12
  e2:	0e 94 54 00 	call	0xa8	; 0xa8 <LCD_sendCommand>
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	0e 94 54 00 	call	0xa8	; 0xa8 <LCD_sendCommand>
  ec:	08 95       	ret

000000ee <LCD_displayCharacter>:
  ee:	94 9a       	sbi	0x12, 4	; 18
  f0:	95 98       	cbi	0x12, 5	; 18
  f2:	2a ef       	ldi	r18, 0xFA	; 250
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	f9 01       	movw	r30, r18
  f8:	31 97       	sbiw	r30, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <LCD_displayCharacter+0xa>
  fc:	96 9a       	sbi	0x12, 6	; 18
  fe:	f9 01       	movw	r30, r18
 100:	31 97       	sbiw	r30, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <LCD_displayCharacter+0x12>
 104:	85 bb       	out	0x15, r24	; 21
 106:	c9 01       	movw	r24, r18
 108:	01 97       	sbiw	r24, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <LCD_displayCharacter+0x1a>
 10c:	96 98       	cbi	0x12, 6	; 18
 10e:	c9 01       	movw	r24, r18
 110:	01 97       	sbiw	r24, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <LCD_displayCharacter+0x22>
 114:	08 95       	ret

00000116 <LCD_displayString>:
 116:	1f 93       	push	r17
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	ec 01       	movw	r28, r24
 11e:	10 e0       	ldi	r17, 0x00	; 0
 120:	03 c0       	rjmp	.+6      	; 0x128 <LCD_displayString+0x12>
 122:	0e 94 77 00 	call	0xee	; 0xee <LCD_displayCharacter>
 126:	1f 5f       	subi	r17, 0xFF	; 255
 128:	fe 01       	movw	r30, r28
 12a:	e1 0f       	add	r30, r17
 12c:	f1 1d       	adc	r31, r1
 12e:	80 81       	ld	r24, Z
 130:	88 23       	and	r24, r24
 132:	b9 f7       	brne	.-18     	; 0x122 <LCD_displayString+0xc>
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	1f 91       	pop	r17
 13a:	08 95       	ret

0000013c <LCD_goToRowColumn>:
 13c:	81 30       	cpi	r24, 0x01	; 1
 13e:	39 f0       	breq	.+14     	; 0x14e <LCD_goToRowColumn+0x12>
 140:	81 30       	cpi	r24, 0x01	; 1
 142:	50 f0       	brcs	.+20     	; 0x158 <LCD_goToRowColumn+0x1c>
 144:	82 30       	cpi	r24, 0x02	; 2
 146:	29 f0       	breq	.+10     	; 0x152 <LCD_goToRowColumn+0x16>
 148:	83 30       	cpi	r24, 0x03	; 3
 14a:	31 f4       	brne	.+12     	; 0x158 <LCD_goToRowColumn+0x1c>
 14c:	04 c0       	rjmp	.+8      	; 0x156 <LCD_goToRowColumn+0x1a>
 14e:	60 5c       	subi	r22, 0xC0	; 192
 150:	03 c0       	rjmp	.+6      	; 0x158 <LCD_goToRowColumn+0x1c>
 152:	60 5f       	subi	r22, 0xF0	; 240
 154:	01 c0       	rjmp	.+2      	; 0x158 <LCD_goToRowColumn+0x1c>
 156:	60 5b       	subi	r22, 0xB0	; 176
 158:	86 2f       	mov	r24, r22
 15a:	80 68       	ori	r24, 0x80	; 128
 15c:	0e 94 54 00 	call	0xa8	; 0xa8 <LCD_sendCommand>
 160:	08 95       	ret

00000162 <LCD_displayStringRowColumn>:
 162:	0f 93       	push	r16
 164:	1f 93       	push	r17
 166:	8a 01       	movw	r16, r20
 168:	0e 94 9e 00 	call	0x13c	; 0x13c <LCD_goToRowColumn>
 16c:	c8 01       	movw	r24, r16
 16e:	0e 94 8b 00 	call	0x116	; 0x116 <LCD_displayString>
 172:	1f 91       	pop	r17
 174:	0f 91       	pop	r16
 176:	08 95       	ret

00000178 <LCD_clearScreen>:
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	0e 94 54 00 	call	0xa8	; 0xa8 <LCD_sendCommand>
 17e:	08 95       	ret

00000180 <LCD_intgerToString>:
 180:	0f 93       	push	r16
 182:	1f 93       	push	r17
 184:	df 93       	push	r29
 186:	cf 93       	push	r28
 188:	cd b7       	in	r28, 0x3d	; 61
 18a:	de b7       	in	r29, 0x3e	; 62
 18c:	60 97       	sbiw	r28, 0x10	; 16
 18e:	0f b6       	in	r0, 0x3f	; 63
 190:	f8 94       	cli
 192:	de bf       	out	0x3e, r29	; 62
 194:	0f be       	out	0x3f, r0	; 63
 196:	cd bf       	out	0x3d, r28	; 61
 198:	8e 01       	movw	r16, r28
 19a:	0f 5f       	subi	r16, 0xFF	; 255
 19c:	1f 4f       	sbci	r17, 0xFF	; 255
 19e:	b8 01       	movw	r22, r16
 1a0:	4a e0       	ldi	r20, 0x0A	; 10
 1a2:	50 e0       	ldi	r21, 0x00	; 0
 1a4:	0e 94 52 01 	call	0x2a4	; 0x2a4 <itoa>
 1a8:	c8 01       	movw	r24, r16
 1aa:	0e 94 8b 00 	call	0x116	; 0x116 <LCD_displayString>
 1ae:	60 96       	adiw	r28, 0x10	; 16
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	f8 94       	cli
 1b4:	de bf       	out	0x3e, r29	; 62
 1b6:	0f be       	out	0x3f, r0	; 63
 1b8:	cd bf       	out	0x3d, r28	; 61
 1ba:	cf 91       	pop	r28
 1bc:	df 91       	pop	r29
 1be:	1f 91       	pop	r17
 1c0:	0f 91       	pop	r16
 1c2:	08 95       	ret

000001c4 <__vector_2>:
 1c4:	1f 92       	push	r1
 1c6:	0f 92       	push	r0
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	0f 92       	push	r0
 1cc:	11 24       	eor	r1, r1
 1ce:	2f 93       	push	r18
 1d0:	3f 93       	push	r19
 1d2:	4f 93       	push	r20
 1d4:	5f 93       	push	r21
 1d6:	6f 93       	push	r22
 1d8:	7f 93       	push	r23
 1da:	8f 93       	push	r24
 1dc:	9f 93       	push	r25
 1de:	af 93       	push	r26
 1e0:	bf 93       	push	r27
 1e2:	ef 93       	push	r30
 1e4:	ff 93       	push	r31
 1e6:	0e 94 3a 01 	call	0x274	; 0x274 <Motor_reverse>
 1ea:	ff 91       	pop	r31
 1ec:	ef 91       	pop	r30
 1ee:	bf 91       	pop	r27
 1f0:	af 91       	pop	r26
 1f2:	9f 91       	pop	r25
 1f4:	8f 91       	pop	r24
 1f6:	7f 91       	pop	r23
 1f8:	6f 91       	pop	r22
 1fa:	5f 91       	pop	r21
 1fc:	4f 91       	pop	r20
 1fe:	3f 91       	pop	r19
 200:	2f 91       	pop	r18
 202:	0f 90       	pop	r0
 204:	0f be       	out	0x3f, r0	; 63
 206:	0f 90       	pop	r0
 208:	1f 90       	pop	r1
 20a:	18 95       	reti

0000020c <main>:
 20c:	1f 93       	push	r17
 20e:	8f b7       	in	r24, 0x3f	; 63
 210:	80 68       	ori	r24, 0x80	; 128
 212:	8f bf       	out	0x3f, r24	; 63
 214:	8d e7       	ldi	r24, 0x7D	; 125
 216:	0e 94 29 01 	call	0x252	; 0x252 <PWM_Timer0_Init>
 21a:	0e 94 49 01 	call	0x292	; 0x292 <int1_init>
 21e:	0e 94 31 01 	call	0x262	; 0x262 <MOTOR_configure>
 222:	0e 94 68 00 	call	0xd0	; 0xd0 <LCD_init>
 226:	0e 94 41 00 	call	0x82	; 0x82 <ADC_init>
 22a:	0e 94 bc 00 	call	0x178	; 0x178 <LCD_clearScreen>
 22e:	80 e6       	ldi	r24, 0x60	; 96
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	0e 94 8b 00 	call	0x116	; 0x116 <LCD_displayString>
 236:	80 e0       	ldi	r24, 0x00	; 0
 238:	6c e0       	ldi	r22, 0x0C	; 12
 23a:	0e 94 9e 00 	call	0x13c	; 0x13c <LCD_goToRowColumn>
 23e:	80 e0       	ldi	r24, 0x00	; 0
 240:	0e 94 45 00 	call	0x8a	; 0x8a <ADC_readChannel>
 244:	18 2f       	mov	r17, r24
 246:	0e 94 c0 00 	call	0x180	; 0x180 <LCD_intgerToString>
 24a:	81 2f       	mov	r24, r17
 24c:	0e 94 2f 01 	call	0x25e	; 0x25e <MOTOR_setSpeed>
 250:	f2 cf       	rjmp	.-28     	; 0x236 <main+0x2a>

00000252 <PWM_Timer0_Init>:
 252:	12 be       	out	0x32, r1	; 50
 254:	8c bf       	out	0x3c, r24	; 60
 256:	bb 9a       	sbi	0x17, 3	; 23
 258:	8a e6       	ldi	r24, 0x6A	; 106
 25a:	83 bf       	out	0x33, r24	; 51
 25c:	08 95       	ret

0000025e <MOTOR_setSpeed>:
 25e:	8c bf       	out	0x3c, r24	; 60
 260:	08 95       	ret

00000262 <MOTOR_configure>:
 262:	88 b3       	in	r24, 0x18	; 24
 264:	8c 7f       	andi	r24, 0xFC	; 252
 266:	88 bb       	out	0x18, r24	; 24
 268:	87 b3       	in	r24, 0x17	; 23
 26a:	83 60       	ori	r24, 0x03	; 3
 26c:	87 bb       	out	0x17, r24	; 23
 26e:	c0 98       	cbi	0x18, 0	; 24
 270:	c1 9a       	sbi	0x18, 1	; 24
 272:	08 95       	ret

00000274 <Motor_reverse>:
 274:	80 91 6d 00 	lds	r24, 0x006D
 278:	88 23       	and	r24, r24
 27a:	31 f0       	breq	.+12     	; 0x288 <Motor_reverse+0x14>
 27c:	c0 9a       	sbi	0x18, 0	; 24
 27e:	c1 98       	cbi	0x18, 1	; 24
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	80 93 6d 00 	sts	0x006D, r24
 286:	08 95       	ret
 288:	c0 98       	cbi	0x18, 0	; 24
 28a:	c1 9a       	sbi	0x18, 1	; 24
 28c:	10 92 6d 00 	sts	0x006D, r1
 290:	08 95       	ret

00000292 <int1_init>:
 292:	8b 98       	cbi	0x11, 3	; 17
 294:	93 9a       	sbi	0x12, 3	; 18
 296:	85 b7       	in	r24, 0x35	; 53
 298:	8c 60       	ori	r24, 0x0C	; 12
 29a:	85 bf       	out	0x35, r24	; 53
 29c:	8b b7       	in	r24, 0x3b	; 59
 29e:	80 68       	ori	r24, 0x80	; 128
 2a0:	8b bf       	out	0x3b, r24	; 59
 2a2:	08 95       	ret

000002a4 <itoa>:
 2a4:	fb 01       	movw	r30, r22
 2a6:	9f 01       	movw	r18, r30
 2a8:	e8 94       	clt
 2aa:	42 30       	cpi	r20, 0x02	; 2
 2ac:	c4 f0       	brlt	.+48     	; 0x2de <itoa+0x3a>
 2ae:	45 32       	cpi	r20, 0x25	; 37
 2b0:	b4 f4       	brge	.+44     	; 0x2de <itoa+0x3a>
 2b2:	4a 30       	cpi	r20, 0x0A	; 10
 2b4:	29 f4       	brne	.+10     	; 0x2c0 <itoa+0x1c>
 2b6:	97 fb       	bst	r25, 7
 2b8:	1e f4       	brtc	.+6      	; 0x2c0 <itoa+0x1c>
 2ba:	90 95       	com	r25
 2bc:	81 95       	neg	r24
 2be:	9f 4f       	sbci	r25, 0xFF	; 255
 2c0:	64 2f       	mov	r22, r20
 2c2:	77 27       	eor	r23, r23
 2c4:	0e 94 83 01 	call	0x306	; 0x306 <__udivmodhi4>
 2c8:	80 5d       	subi	r24, 0xD0	; 208
 2ca:	8a 33       	cpi	r24, 0x3A	; 58
 2cc:	0c f0       	brlt	.+2      	; 0x2d0 <itoa+0x2c>
 2ce:	89 5d       	subi	r24, 0xD9	; 217
 2d0:	81 93       	st	Z+, r24
 2d2:	cb 01       	movw	r24, r22
 2d4:	00 97       	sbiw	r24, 0x00	; 0
 2d6:	a1 f7       	brne	.-24     	; 0x2c0 <itoa+0x1c>
 2d8:	16 f4       	brtc	.+4      	; 0x2de <itoa+0x3a>
 2da:	5d e2       	ldi	r21, 0x2D	; 45
 2dc:	51 93       	st	Z+, r21
 2de:	10 82       	st	Z, r1
 2e0:	c9 01       	movw	r24, r18
 2e2:	0c 94 73 01 	jmp	0x2e6	; 0x2e6 <strrev>

000002e6 <strrev>:
 2e6:	dc 01       	movw	r26, r24
 2e8:	fc 01       	movw	r30, r24
 2ea:	67 2f       	mov	r22, r23
 2ec:	71 91       	ld	r23, Z+
 2ee:	77 23       	and	r23, r23
 2f0:	e1 f7       	brne	.-8      	; 0x2ea <strrev+0x4>
 2f2:	32 97       	sbiw	r30, 0x02	; 2
 2f4:	04 c0       	rjmp	.+8      	; 0x2fe <strrev+0x18>
 2f6:	7c 91       	ld	r23, X
 2f8:	6d 93       	st	X+, r22
 2fa:	70 83       	st	Z, r23
 2fc:	62 91       	ld	r22, -Z
 2fe:	ae 17       	cp	r26, r30
 300:	bf 07       	cpc	r27, r31
 302:	c8 f3       	brcs	.-14     	; 0x2f6 <strrev+0x10>
 304:	08 95       	ret

00000306 <__udivmodhi4>:
 306:	aa 1b       	sub	r26, r26
 308:	bb 1b       	sub	r27, r27
 30a:	51 e1       	ldi	r21, 0x11	; 17
 30c:	07 c0       	rjmp	.+14     	; 0x31c <__udivmodhi4_ep>

0000030e <__udivmodhi4_loop>:
 30e:	aa 1f       	adc	r26, r26
 310:	bb 1f       	adc	r27, r27
 312:	a6 17       	cp	r26, r22
 314:	b7 07       	cpc	r27, r23
 316:	10 f0       	brcs	.+4      	; 0x31c <__udivmodhi4_ep>
 318:	a6 1b       	sub	r26, r22
 31a:	b7 0b       	sbc	r27, r23

0000031c <__udivmodhi4_ep>:
 31c:	88 1f       	adc	r24, r24
 31e:	99 1f       	adc	r25, r25
 320:	5a 95       	dec	r21
 322:	a9 f7       	brne	.-22     	; 0x30e <__udivmodhi4_loop>
 324:	80 95       	com	r24
 326:	90 95       	com	r25
 328:	bc 01       	movw	r22, r24
 32a:	cd 01       	movw	r24, r26
 32c:	08 95       	ret

0000032e <_exit>:
 32e:	f8 94       	cli

00000330 <__stop_program>:
 330:	ff cf       	rjmp	.-2      	; 0x330 <__stop_program>
